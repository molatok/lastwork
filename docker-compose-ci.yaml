version: '3.9'

services:
  front:
    image: sermalenk/skypro-front:lesson-35
    ports:
      - 80:80
    depends_on:
      - api
  api:
    image: molatok/lastwork:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: "$ALLOWED_HOSTS"
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USER
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
  migrations:
    image: molatok/lastwork:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: "$ALLOWED_HOSTS"
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $DB_USER
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c 'python manage.py migrate'
  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 5


volumes:
  lastwork-db:

